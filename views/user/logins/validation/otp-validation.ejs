<script>
    const form = document.getElementById("otp-form");
    const otp = document.getElementById("otp");
    const otpRegex = /^\d{6}$/;
    const otpError = "<strong>Invalid OTP format. Please enter a 6-digit number.</strong>";
    const invalidOtpError = "<strong>The OTP entered is incorrect. Please ensure you have entered the correct OTP and try again.</strong>";

    otp.addEventListener("input", () => {
        let otpErrorText = "";

        // Check if the OTP field is empty or invalid
        if (otp.value.trim() !== "" && !otpRegex.test(otp.value.trim())) {
            otpErrorText = otpError;
        }

        // Display error message or clear existing error message
        document.getElementById("otp-error").innerHTML = otpErrorText;
        otp.classList.toggle("is-invalid", otpErrorText !== "");
    });

    form.addEventListener("submit", async (event) => {
        event.preventDefault();

        let isValid = true;
        let otpErrorText = "";

        // Check if the OTP field is empty or invalid
        if (otp.value.trim() === "") {
            otpErrorText = "<strong>OTP is required.</strong>";
            isValid = false;
        } else if (!otpRegex.test(otp.value.trim())) {
            otpErrorText = otpError;
            isValid = false;
        }

        // Display error message if any
        if (!isValid) {
            document.getElementById("otp-error").innerHTML = otpErrorText;
            otp.classList.add("is-invalid");
            return;
        }

      

        // Verify OTP
        const xhr = new XMLHttpRequest();
        xhr.open('POST', '/otp-verify');
        xhr.setRequestHeader('Content-Type', 'application/json');

        xhr.onreadystatechange = function () {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                const data = JSON.parse(xhr.response);

                if (data.status) {
                    window.location.href = '/';
                } else {
                    otpErrorText = invalidOtpError;
                    document.getElementById("otp-error").innerHTML = otpErrorText;
                    otp.classList.add("is-invalid");
                }
            }
        };
        xhr.send(JSON.stringify({ otp: otp.value.trim() }));

    });

    // Clear error message and class when input field is focused
    otp.addEventListener("focus", () => {
        document.getElementById("otp-error").innerHTML = "";
        otp.classList.remove("is-invalid");
    });
</script>